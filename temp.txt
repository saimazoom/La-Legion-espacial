
//
// ZHL. Escrita por KMBR.
// 2016-2019 KMBR
// This code is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)  license.
// http://creativecommons.org/licenses/by-nc-sa/4.0/

//#include <stdio.h>
#include <string.h>
//#include <spectrum.h>
#include "parser_defs.h"
#include "parser.h"
// Flags del Juego
#include "juego_flags.h"

/* Allocate space for the stack */

#pragma output STACKPTR=24200
#pragma -reqpag=0
#pragma -no-expandz88
#pragma output CRT_ENABLE_CLOSE = 0    // do not close open files on exit (at this time this has no effect)
#pragma output CLIB_EXIT_STACK_SIZE = 0   // get rid of the exit stack (no functions can be registered with atexit() )
#pragma output CLIB_MALLOC_HEAP_SIZE = 0  // malloc's heap will not exist
#pragma output CLIB_STDIO_HEAP_SIZE = 0  // stdio's heap will not exist (you will not be able to open files)
#pragma output CLIB_FOPEN_MAX = -1  // don't even create the open files list
#pragma output CRT_ENABLE_RESTART = 1

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// CÛdigo local
// Si necesitamos cÛdigo en p·ginas de memoria hay que compilarlas como .bin y aÒadirlas aquÌ como extern
// Se llaman desde el cÛdigo usando: setRAMpage (n) y llamando a la funciÛn, al terminar hay que volver siempre a la p·gina 0

char respuestas();
char respuestas_post();
char proceso1();
char proceso1_post();
char proceso2();
char proceso2_post();


// Variables que necesitamos del parser...
// Se pueden declarar m·s tablas de flags para el juego pero el parser
// sÛlo trabaja con esta. 
extern unsigned char flags[255]; // Flags 60...250 Disponibles para el usuario

// Tabla de im·genes del juego
img_t imagenes_t [] =
    {   
    { 0,0,0}
    };

// Tabla de regiones
// Regiones del juego...
//unsigned char region_exterior [] = { 4,6,7,0 };
//unsigned char region_entrada [] = { 13,10,17,14,9,0 };
//unsigned char region_superior [] = { 3,8,23,26,27,0 };
//unsigned char region_inferior [] = { 12,15,19,2,5,11,21,16,19,18,27,28,25,24,30,1,31,20,0 };

// Tabla de localidades de la aventura
// 250 to 255 reservadas
// Regiones del juego...
// unsigned char *name;
//	unsigned char *descripcion;
//	unsigned char id;
//  unsigned char visitado
//	unsigned long int atributos; // 32bit

// ˙ltima localidad como ID 0 

loc_t localidades_t [] =
{
	{"Puõüím…π","UµØuz≤mb∞iµ»i+ülû“¬rumõoÑê∏l±Æ#lid°⁄äºóÅext®i±æüÌatüuµ»±mõÖ hi∂o«E¨›d°cäa¨§Äµvüﬂócuäa baj…πêt´måîcΩ®º«",lPuente, FALSE, 0x00000000},
	{"Nod°cäa¨","La µvühaæid°diﬂ+¿Ö f±Ãøodu™r«E¨›d°cäΩÉ‡√ÅÛõüím…πÉÄ•clu—≤l†xt®i±≤¨o•©ÊyÄbo§≤¨sur«Uµ»£uüilu⁄µÕ&ßp≈vi£üdÜsîcΩ®aÑ¨Ûõüdñm…π«",lNodo, FALSE, 0x00000000},
	{"Esclusa","LçclusçÅ€s©mÖ i¥®·mbiå≠r•i&ßäeÅext®i± yÄzoµ hÌi√blü§Äµœ.",lEsclusa, FALSE, 0x00000000},
	{"Bo§gÖÆ∞","La z∫ÖÆ∞gÖÄµvüju¬ifi·Äexi¬£ÕÖãa µœ«Ti£eî∆Õ°sufiÕõeéa≤t£§rØût%pi∏sóv%ûäeétÍu™r•Çuß€s©Ã«HaÓv∞iû∆q≥töà•p®aßsu äe«", lBodega, FALSE, 0x00000000},
	{"Exterior","E¨Õ∂oîêb±r&ßín–vüyÆ◊¬ΩeÑ hi∂o«La»±mõaÆºtiÄsup®fiÕeóÄzoµ ¡curÖ Eu≈∆«La µvüfÿ√≤≠ocûcõ%ÂƒoÑÄsup®fiÕeÉge™”«A¨o•tüsüdi¬“guüuµøolüíÂ√¨àÈdr%aæ®Ää¿Ö¨ΩÃc$n.",lExterior, FALSE, 0x00000000},
    {"E¥´”≤¨ΩÃc$n","UµøolüíÂ√¨ﬂócuäaóc™v¿aóÄsup®fiÕühe™dÖ Eu≈∆«",lAlmacen, FALSE, 0x00000000},
    {"Zoµ A1","Lºãa¥®%ôªp÷√ÑÉt£ed±öb™ncûcªaßuµ≤tm&sf®aŸpr•iva«Ußpºill°Ïgr°a¨o•tü”≤cc•°aŸt´æΩÖ¨ΩÃc$n.",lZonaA1, FALSE, 0x00000000},
    {"Zoµ A2","E¨ΩÃc$ßt®⁄µÇuµæaïÌoœd¿a≠i¥¿Ö b™n∏«AŒ% hay≤ußm#sÉt£ed±öp®f‡√mõü±d£aπsÇ•√¥®%º.",lZonaA2, FALSE, 0x00000000},
    {"","",0, FALSE, 0x00000000}
};

// Localidades para contenedores

// Tabla de conexiones...
// Se usan los ID de localidad para idenfiticar las conexiones
cnx_t conexiones_t [] =
{
// LOC | AL_N | AL_S | AL_E | AL_O | AL_NE | AL_NO | AL_SE | AL_SO | ARRIB | ABAJO | ENTRAR | SALIR 
	{lPuente,{	0,		lNodo,		0,		0,		0,		0,		0,		0,		0,		lNodo,	0,	0}},
	{lNodo,{lPuente,		lBodega,		0,		lEsclusa,		0,		0,		0,		0,		lPuente,		0,0,0}},
	{lEsclusa,{0,		0,		lNodo,		0,		0,		0,		0,		0,		0,		0,0,0}},
	{lBodega,{lNodo,		0,		0,		0,		0,		0,		0,		0,		lNodo,		0,0,0}},
	{lExterior,{0,		0,		lEsclusa,		lEntrada,		0,		0,		0,		0,		0,		0,0,0}},
	{lEntrada,{0,		0,		lExterior,		0,		0,		0,		0,		0,		0,		0,0,0}},
	{lZonaA1,{0,		0,		lEntrada,		lZonaA2,		0,		0,		0,		0,		0,		0,0,lEntrada}},
	{lZonaA2,{0,		0,		lZonaA1,		0,		0,		0,		0,		0,		0,		0,0,0}},
	{0,{	0,		0,		0,		0,		0,		0,		0,		0,		0,		0,0,0}}
	};

// Tabla de mensajes de la aventura
// 1 to 255
// Text, message_id (0 t0 255)
// Messages can be printed directly in the code just calling the function writeText (unsigned char *string)
// More than one message table can be defined

token_t mensajes_t [] =
{
	{"ZHL^ E¥ªmûsu≠aq≥©Ç24h«^ (c) 2016Ê2019 KMBR«R∂eºü4.",1},
	{"N°œ°µ”Çp∞tÍu™r.",2},
	{"ZHL bÓKMBR",3},
	{"D•Õ£d£≤¨›d°cäΩ.",4},
	{"AsÕ£d£≤¨Ûõüím…π.",5},
	{"E¨m&duÿéaòm…d∞Äµœ.",6},
	{"La v%aØ#c©aÇnu•ƒ°cºo.",7},
	{"LaÉsolÖø…πÑÄµœ«EsêÎ§l°bº√¥ün≥vo,Å±d£¿± íÌ±d°ﬂóc∞gÖÄµœÕ&ßy»odûl¡òm…dûsüªΩizaßp± voz«EnãüÎmõoÄ∆¥ΩlÖÄ∏nso™ã#ÇÏg≈.",8},
	{"-FÀÕoµm¡ÇÎdå bajoÉsuÎ«LaÉsolÖbüp®m…‡®≤∆g¿a -r•p∫§Å±d£¿±.",9},
	{"P≈vi£ü§Ä∏nsolÖø…πs«LaÉso™ã#ÇÎdå bajoÉsuÎ«",10},
	{"N–vüÓhi∂°a 150 C∂€u¢baj°c®o.",11},
	{"E¨€s©Ã»$r⁄c°ap£ôp≥íevit∞Äf±ÃÕ&ßíc◊¬Ω•óÅext®i± §léÌ◊sº.",12},
	{"Süf±m…Çlûg´diõöt$r⁄∏ÑléÌ◊—ÑÄµœ.",13},
	{"La µvüíªp∞t°πníªc±r•Ä™xia«",14},
	{"-Co¥≈™Ä©mp®atu´óÅi¥®i± yÇlû“¬rumõ¡éùvit∞æu §t®i±°-“f±ÃÅ±d£¿±.",15},
	{"E¢À°áûdût´jeÑæup®viv£Õa ‡•∞‚éa ªΩiz∞ EVA«E¨t´jeîòmp÷√mõüau’m#tÍ°y»i£üuµ≤ut∫om%ÖŸch°ho´s«",16},
	{"Paq≥töa äeg∞óÄTi®´.",17},
	{"E¬#≤∆g¿a.",18},
	{"-N°sobªvivir$ÇEu≈∆æ“Åt´jüp≈©ct±.",19},
	{"-Debid°aÄ∏¥a⁄µÕ&ß§jaÅt´jü…©Ñ≠º∞≤¨›d°cäa¨-tüªcu®”Å±d£¿±.",20},
	{"Lçclu—æirœéa igua™rÄpr•i&ßäeÅext®i± yÅi¥®i± §Äµœ«SeÉƒo™ÉÅb&’ß≈joéaÆ®´∑yÅbot&ßv®§éa≤b◊r«",21},
	{"E¬#Æ®´”.",22},
	{"E¬#≤bi®√.",23},
	{"-Lçclu—æüÌªÉØ¡Éƒolöm…uΩeÑÄ•clu— -“f±ÃÅ±d£¿±.",24}, 
	{"-Lçclu—æüÕ®´ÉØ¡Éƒolöm…uΩeÑÄ•clu— -“f±ÃÅ±d£¿±«",25},
	{"Puls∞éa≤b◊rÄ•clu—«ADVERTENCIA: USAR EL TRAJE DE SUPERVIVENCIA EN ENTORNOS HOSTILES.",26},
	{"Puls∞éaÆ®´rÄ•clu—.",27},
	{"-Lçclu— yaã#≤bi®√.",28},
	{"-Ab◊£πòmÛ®tùxt®i± y≤Ë™nπÅi¥®i± -diÁÅ±d£¿±«LaòmÛ®tùxt®i±æüÌªÉê€ﬂ°⁄äôsüigua™nì¢pr•i∫•.",29},
	{"-C®´nπòmÛ®tùxt®i±- ªpi©Å±d£¿±",30},
	{"Uµ œzÄ∏mÛ®tùxt®i±æühaÆ®´πÊÀûch±≈Ñ≤irüa≠r•i&ßsurg£¶Üsée§séaúim“∞Ø¡É√⁄µ¥öüigua™∑ín≥voÄpr•i‰.",30},
	{"Uß∆nñsüÌrüy≠®⁄©Å‹c•°a¨i¥®i± §Äµœ.",31},
	{"-Lçclu— yaã#Æ®´” -ªp±√Å∏mÛt¿± íÌ±π.",32},
	{"Ap£ôÀû⁄l%ÂƒoÑ≠l#¬Í°yøe√¨tüﬂën¶ñext®i±.",33},
	{"-Fr%°a¨√c’.",34},
	{"To√¨¡cu◊d¿æΩv°p±Åb◊lÿîŒiv°áûƒozoÑ hi∂°à•t#ß·y£π.",35},
	{"La µvüÎdu™rã#„∞ íZHL«Pi¥¿Ö≤m∞ill°yÉÅÿgåÄ∏m∆+%aÇg´„ö÷ƒô≈jº.",36},
	{"ZHL 24h",37},
	{"C∫¶ifÍult¿¶i¬“gu•Åp®fi¨§êedifiÕåøe√¨ªc±√πÉt´ÅÕ∂o«",38},
	{"Enê™t®a¨§Ää¿aê©c™d°num$◊c°ilu⁄µØeœmõeÄ¡cu◊d¿.",39},
	{"P±‘µ≤b®tu´æü§slizaê·+&ßl#s® àtüaÛ¥a: TECLEE EL C&DIGO DE ACCESO«TIENE UNA OPORTUNIDAD ANTES DE SER DESINTEGRADO.",40},
	{"Uß·+&ßíºp‡t°p∂igr¡°€guütu¢Îvi⁄õ¡.",41},
	{"Tod°soß·jôb™n·Ñ √Ã+°€⁄™r«Lôm#¢g´„öﬂócuä…Çl¡ãa¥öm#¢baj¡.",42},
	{"Aÿjaß§c£aÑ≠eq≥+¡Ét£ed±öb™n∏s.",43},
	{"Tod°fÀÕoµl«Elî∆Õ°sufiÕõeéaøa¥£®ìsÉdiÕ∫ön‡•∞iºéa≠r•®v∞øat®iΩöb‚l&gi∏s.",44},
	{"Uµ b&œ” °muy≤l√ f±ÃÅ©chåãaæa™.",45},
	{"Uß∆q≥tüazulÉêg´ß“dÍ¿± íp∂igr°b‚l&gi∏óÅf≈¥Ω«",46},
	{"-Es©îÅ∆q≥tü-susur´Å±d£¿±ÇtuŸ%π.",47},
	{"-N°p≥π,ì¢diªctivaÑÄÒpr•aøül°impid£«",48},
	{"P∂igr°b‚l&gi∏«C∫s®v∞≤ø£oÑ 100Æ∂€u¢baj°c®o«N°m…iÛ™∑€ßp≈©cÕ‰«N°Ì◊r«N°golpe∞«Mat®ia¨fr#gil.",49},
	// Textos relativos al ordenador
	{"-Co±d“°’dûlû€s©ÃÑÄµœ«PèhÌ™rÉ⁄go†mp÷a: ±d£¿±≠a™b´Æ™œ«AlgÀôsug®£ÕaÑ≠a™brôc™vüs∫: ±d£¿±≤yu”Ê±d£¿± ombªÊ±d£¿±øi€‰..«-tür•p∫ís®viÕΩÅ±d£¿± íµœÕ‰.",50},
	{"-OhÊvayaòm°n°p£s$Ç÷®î°-diÁÅ∏mÛt¿±É fΩ—≤d⁄´Õ‰.",51},
	{" ",52},
	{"N°›t°µ”Çp∞tÍu™r.",53},
	{"N¿a à§¬‹∞.",54},
	{"NoîîpeÕΩmõüi¥®•…©.",55},
	{"N°suÁíµ” “•p®aπ.",56},
	{"E¨aullidå¨viõ°sü“filt´≠±Åfuﬂ™je.",57},
	{"-Bu£»´baj°-apr≥baÄvozæatËf‡hÖ¨±d£¿±« ",58},
	{"-Ah±çøomõå≠∫®ﬁumb°a M∞©«Baja≤Äbo§gÖÆ∞øiäôª“iÕ°lû€s©ÃÑÄµvü-diÁÅ±d£¿±≠ªmu´«",59},
	{"D•Õ£d°l¡îcΩ∫öaÄbo§ Ó§p¡i’Å∆q≥tüju¥°aØoÑm#¢p£diõeÑ äe«A¨ªgr•∞ §scub≈âÄ—ïsühaÆ®´π.",60},
	{"-Noî µ”≠®soµ¨p®oîøomõå ªÕc™∑-diÁÄvoz¶ñ±d£¿±-øiäºêgô“À”Äbo§ yÆa•Çußp≈fÀd°s≥+o.",61}, 
	{"L°m#¢du≈î»£® àªÕc™∑su¢p–zºéaÄ€guiõü⁄€‰«L÷ßaÆª®sühum…¡«Eßf“..«-suspi´Å±d£¿±øiäôª∏gülûr•’Ñ»uÆu®ÈÉ‘µ ≈bofªgoµ.",62},
	{"-CäΩ,≤Œ% Tod C∫n± -diÁÄvoz- Volœmûa M∞©ÉÅ∆q≥©«Repit°volœm¡ÉÅ∆q≥©«",63},
	{"Hay¶ûbot∫•: ≈j°Óv®§«Süutiliz…éaÆ®´∑y≤b◊rÄ•clu—≤l†xt®i±«",172},
	{"Lû€guiõö∆q≥t•éa äeg∞.",173},
	{"Noîøomõå jug∞≤¨Sokob….",174},
	{"-Voo™ª..«oohŸooh -tü§v≥lvücr≥lÅ‡åÄµœ.",175},
	{"-Ca¥∞e,ŸohŸooh -i¥õºót∫∞ ^ -Nñblu¶ipi¥°di blu...",176},
	{"S&ÿîcuchoã#ti·«La»±mõa i¥®fi®eÇ™sòmÀi·Õ∫•.",177},
	{"E¬oyóÄcèocul√, °œ°J'pit®.",178},
	{"Sat$litühe™d°ü“h&spi’.",179}, 
	{"La ä¿a≤¨ΩÃc$n«",180},
	{"FÀÕoµÉòm…πÑ voz≤¨±d£¿±: ±d£¿±Æ™œ.",181}, 
	{"EsêbÿàÂt#lÍ°ªc√ngu™∑àsüi¥®µ baj°ti®´.",182}, 
	{"(£Å©c™π)",183},
	{"La≠u®tÖ¨ΩÃc$ßyaã#≤bi®√.",184},
	{"E¨©c™d°süilu⁄µÇ≈jo«CODIGO INCORRECTO.",185}, 
	{"E¨©c™d°süilu⁄µÇv®§«CODIGO CORRECTO«E¨·+&ßl#s®æüªpl–Çsuòmp∞timõo.",186}, 
	{"E¨·+&ßl#s®ò⁄£za≤ÆΩõ∞ﬂ.",187},
	{"E¨·+&ßl#s®æüpªpèa¶Ëër«",188},
	{"E¨·+&ßl#s®¶Ëë«",189},
	{"P®°µ”æuÁ§«Uµ volutÖ hum°y≤lgÀôchËpôsurg£¶ñ·+‰.",190},
	{"S∫Ét£ed±eÑ»´nsp±©.",191}, 
	{"(∏gi£d°a¥•Åt´je)",192},
	{"-E¥∫cö©âd∞%ôaæo™sÇ•tülug∞ “h&spit°-tüªcu®”Å±d£¿±.",193},
	{"-S&l°n‡•i’ê∆q≥tüazul«",194},
	{"Laæup®fiÕeîØi—,æ&l°sü‹tivaÉÅ©c™π.", 195},
	{"E U R O P A",196},
};

token_t mensajesSistema_t [] =
{
	{"N°p≥d°v® µ”,ã#øuÓ¡cu≈.^",0},
	{"Tambi$ßhaÓ",1},
	{"Esc◊bütu¢&Ô£öaŒ%",2},
	{"",3},
	{"",4},
	{"",5},
	{"/C&Î? P± fav±≠r≥baÉŸƒô∆™b´s.^",6},
	{"N°p≥d°irÇ•a¶iªcÕ‰.^",7},
	{"øPerdÛn?^",8},
	{"L÷v°",9},
	{"(puesto)",10},
	{"n“g'ßobje’.",11},
	{"/Segu≈? ",12},
	{"/J≥Ñ ≥vo? ",13},
	{"AdiÛs...",14},
	{"OK^",15},
	{"[...]",16},
	{"HôªΩiz¿°",17},
	{"»ur›",18},
	{"s",19},
	{".^ ",20},
	{"La≠u¥uaÕ‰†Ñ ",21},
	{"≠u¥o",22},
	{"N°l÷v°Û•’îo.^",23},
	{"N°p≥πÊyaØ÷voî°Û•’.^",24},
	{"Ya»£g°",25},
	{"N°œoî°p±≤Œ%.^",26},
	{"N°p≥d°l÷v∞ø#sòsº.^",27},
	{"N°t£goîo.^",28},
	{"P®°€ yaØ÷v°Û•’",29},
	{"S",30},
	{"N",31},
	{"M·s...",32},
	{"> ",33},
	{"",34},
	{"E¨t–mp°pºa...^",35},
	{"Heògid°",36},
	{"Müp∫g°",37},
	{"MüŒit°",38},
	{"Dej°",39},
	{"N°p≥d°p∫®mü",40},
	{"N°p≥d°Œit∞mü",41},
	{"<T£gåmºi¿ºòsºÇlôm…¡!",42},
	{"D•g´Õ¿amõüp•Ömºiaπ",43},
	{"Met°",44},
	{"Aho´ oã#Ç",45},
	{",",46},
	{" Ó",47},
	{".",48},
	{"N°t£g°",49},
	{"N°l÷v°Û•t°",50},
	{"",51},
	{"Es°›ã#Ç",52},
	{"n“g'ßobje’",53},
	{"FÍh®°›ó∏¥´π.^",54},
	{"FÍh®oòrrup’.^",55},
	{"Err± íE/S«FÍh®°n°g´baπ.^",56},
	{"Diªct±i°ll£o.^",57},
	{"DËc°ll£o.",58},
	{"NombrüífÍh®°n°v#liπ.^",59},
	{"NombrüdñfÍh®o: ",60},
	{"",61},
	{"/P®d‰? P± fav±≠r≥baÉŸƒô∆™b´s.^",62},
	{"AŒ% ",SYSMESS_NPCLISTSTART},
	{"•t# ",SYSMESS_NPCLISTCONTINUE},
	{"est·n",SYSMESS_NPCLISTCONTINUE_PLURAL},
    {"Dä°haÓ",SYSMESS_INSIDE_YOUCANSEE},
    {"EnÕÃ haÓ",SYSMESS_OVER_YOUCANSEE},
    {"",68},
	{"Noî≤lg°àp≥” Œit∞Â.^",69},
	{"P∫g°",SYSMESS_YOUPUTOBJECTON },
    {"Noî≤lg°àp≥”òg®ﬂ.^",SYSMESS_YOUCANNOTTAKE},
	{"Noé‡üàp≥”øov®ﬂ.^", SYSMESS_CANNOTMOVE},
	{"",0}	
};

// Tablas de vocabulario
// Nombre propios, sustantivos...
// ˙ltimo elemento debe ser 0
#define nNorte  1
#define nSur 	2
#define nEste	3
#define nOeste  4
#define nNoreste 5
#define nNorOeste 6
#define nSurEste 7
#define nSurOeste 8
#define nArriba 9
#define nSubir 9
#define nAbajo 10
#define nBajar 10
#define nEntrar 11
#define nEntra 11
#define nAdentro 11
#define nDentro 11
#define nSalir 12
#define nSal 12 


token_t nombres_t [] =
{
    {"norte",           nNorte},  //0
	{"n",               nNorte},
	{"sur",             nSur},    //2
	{"s",               nSur},
	{"este",            nEste},   //4
	{"e",               nEste},
	{"oeste",           nOeste},  //6
	{"o",               nOeste},
	{"noreste",         nNoreste}, //8
	{"w",               nOeste},
	{"noroeste",        nNorOeste}, //10
	{"ne",              nNoreste},
	{"sureste",         nSurEste},	 //12
	{"se",              nSurEste},
	{"suroeste",        nSurOeste},  // 14
    {"suroe",           nSurOeste},
    {"arriba",          nArriba},   // 16
	{"up",              nNorOeste},
	{"abajo",           nAbajo},   // 18
	{"no",              nNorOeste},
	{"entrar",			nEntrar}, // 20
	{"entra",			nEntrar},
	{"salir",			nSalir}, // 22
	{"sal",				nSalir},
	{"ascie",	nArriba},
	{"subet",	nArriba},
	{"sube",   	nArriba},
	{"bajar",  	nAbajo},
	{"baja",    nAbajo},
	{"desce",	nAbajo},
	{"desci",  	nAbajo},
	{"bajat",  	nAbajo},
	{"entra",	nEntrar},
	{"enter",	nEntrar},
	{"intro",	nEntrar},
	{"adent",   nEntrar},
	{"dentr",   nEntrar},
	{"inter",	nEntrar},
	{"salir",	nSalir},
	{"sal",		nSalir},
	{"exit",	nSalir},
	{"fuera",   nSalir},
	{"afuer",   nSalir},
    {"i",               nInventario},
    {"inven",           nInventario},
	{"inv",         nInventario },
	{"punto",       nPuntos},
	{"puntu",       nPuntos},
	{"conta",       nPuntos},
	{"turno",       nTurnos},    
	// Names < 20 can be used as verbs
	// Nombres para el Vocabulario del juego,
	{"todo",        nTodo},
	{"puerta", nPuerta},
	{"boton", nBoton},
	{"escal", nEscalera},
	{"pared", nPared},
	{"suelo", nSuelo},
	{"techo", nTecho},
	{"luz", nLuz},
	{"haz", nLuz},
	{"parab", 	nParabrisas},
	{"caja",	nCaja},
	{"paque",	nPaquete},
	{"conte",	nContenedor},
	{"cielo",	nCielo},
	{"nave",	nNave},
	{"nodo",	nNodo},
	{"puent",	nPuente},
	{"torme",	nTormenta},
	{"Europ",	nEuropa},
	{"Luna",	nLuna},
	{"Lunas",	nLuna},
	{"Satel",	nSatelite},
	{"Jupit",	nJupiter},
	{"Jovia",	nJoviano},
	{"Cara",	nCara},
	{"Lado",	nLado},
    {"inter", 	nInterior},
	{"almac",	nAlmacen},
	{"mole",	nMole},
	{"edifi",	nEdificio},
	{"orden", 	nOrdenador},
	{"compu", 	nOrdenador},
	{"ia", 		nOrdenador},
	{"dot", 	nOrdenador},
	{"navi", 	nOrdenador}, 
	{"gps", 	nOrdenador},  
	{"galileo", nOrdenador},
	{"tom", 	nOrdenador},    
	{"tomtom", 	nOrdenador}, 
	{"inter", 	nInterior},
	{"conso", 	nConsola},
	{"puent", 	nConsola},
	{"mando",	 nConsola},
	{"siste",	nSistema},
	{"esclu", 	nEsclusa},
	{"airlo", 	nEsclusa},
	{"traje",	nTraje},
	{"bodega", nBodega},
	{"boveda", nBoveda},
	{"estant",	nEstanteria},
	{"camara",	nCamara},
	{"canon",	nCanon},
	{"32768",	n32768},
	{"tecla",	nTeclas},
	{"exter",	nExterior},
	{"fuera",	nFuera},
	{"afuer",	nFuera},
	{"etiqu",	nEtiqueta},
	{"indic",	nIndicador},
	{"panta", nPantalla},
	{"instr", nPantalla},
	{"contr", nControles},
	{"",0}
};

// Verbos
// VOCABULARIO
token_t verbos_t [] =
{
    {"coger",	vCoger},
    {"coge",	vCoger},
    {"tomar",	vCoger},
    {"toma",	vCoger},
    {"take",	vCoger},
    {"dejar",	vDejar},
    {"deja",	vDejar},
    {"solta",	vDejar},
    {"suelt",	vDejar},
    {"drop",	vDejar},
    {"quita",	vQuitar},
    {"sacat",	vQuitar},
    {"sacar",	vSacar},
    {"desvi",	vQuitar},
    {"desve",	vQuitar},
//    {"SENTA",	23},
//    {"SENTA",	23},
//    {"SENTA",	23},
//    {"SIENT",	23},
    {"l",		vMirar},
    {"look",	vMirar},
    {"m",		vMirar},
    {"mirar",	vMirar},
    {"mira",	24},
    {"quit",	25},
    {"fin",		25},
    {"save",	26},
    {"graba",	26},
    {"salva",	26},
	{"guard",	26},
	{"load",	27},
	{"carga",	27},
	{"ramsa",	28},
	{"graba",	28},
	{"ramlo",	29},
	{"carga",	29},
	{"x",       vExaminar},
	{"exami",	vExaminar},
	{"ex",		vExaminar},
	{"inspe",	vExaminar},
	{"obser",	vExaminar},
	{"decir", 	vDecir},
	{"di",		vDecir},
	{"habla", 	vDecir},
	{"respo",  	vDecir},
	{"manda",	vDecir},
	{"lanza",	vLanzar},
	{"tira", 	vLanzar},
	{"tirar",	vLanzar},
	{"arroj",	vLanzar},
	{"empuj",	vEmpujar},
	{"apret",	vEmpujar},
	{"pulsa",	vPulsar},
	/*
	{"AYUDA",	34},
	{"HELP",	34},
	*/
	{"girar",  	vGirar},
	{"gira",    vGirar},
	{"rota",	vGirar},
	{"rotar",	vGirar},
	/*
	{"VOLTE",	35},
	{"MOSTR",	36},
	{"MUEST",	36},
	{"ENSE—", 	36},
	*/
	{"escuc", 	vEscuchar},
	{"oir",		vEscuchar},
	{"oye",		vEscuchar},
	/*
	{"COMER",	38},
	{"COME",	38},
	{"COMET",	38},
	{"TRAGA",	38},
	{"INGIE",	38},
	{"INGER",	38},
	{"MASTI",	38},
	{"BEBER",	39},
	{"BEBE",	39},
	{"BEBET",	39},
	{"BEBER",	39},
	{"TOCAR",	40},
	{"TOCA",	40},
	{"ACARI",	40},
	{"PALPA",	40},
	{"SALID",	41},
	{"EXITS",   41},
	{"X",		41},
	*/
	{"oler",	vOler},
	{"huele",	vOler},
	{"olfat",	vOler},
	{"husme", 	vOler},
	{"esper",	vEsperar},
	{"z",		vEsperar},
	{"canta",	vCantar},
	{"salta", 	vSaltar},
	{"brinc",	vSaltar},
	{"ataca",	vAtacar},
	{"agred",	vAtacar},
	{"matar",	vAtacar},
	{"mata",	vAtacar},
	{"asesi",	vAtacar},
	{"estra",	vAtacar},
	{"patea",	vAtacar},
	{"pisot",	vAtacar},
	{"tortu",	vAtacar},
	{"noque",	vAtacar},
	{"lucha",	vAtacar},
/*
	{"ORINA",	47},
	{"MEAR",	47},
	{"MEA",		47},
	{"MEATE",	47},
	{"MEARS",	47},
	{"MEART",	47},
	{"DEFEC",	47},
	{"CAGAR",	47},
	{"ERUCT",	47},
	{"VOMIT",	47},
	{"ESCUP",	48},
	{"agita",	49},
	{"menea",	49},
	{"sacud",	49},
	{"remov",	49},
	{"remue",	49},
	{"balan",	49},
	{"COLUM",	50},
	{"EXCAV",	51},
	{"CAVAR",	51},
	{"CAVA",	51},
	{"DESEN",	51},
	{"ENTER",	51},
	{"ENTIE",	51},
	{"CORTA",	52},
	{"RASGA",	52},
	{"LEVAN",	53},
	{"atar",	54},
	{"ata",		54},
	{"enlaz",	54},
	{"anuda",	54},
	{"LLENA",	55},
	{"RELLE",	55},
	{"NADAR",	56},
	{"NADA",	56},
	{"TREPA",	57},
	{"ESCAL",	57},
	{"RETOR",	58},
	{"RETUE",	58},
	{"TORCE",	58},
	{"TUERC",	58},
	{"REZAR",	59},
	{"REZA",	59},
	{"ORAR",	59},
	{"ORA",		59},
	{"PENSA",	60},
	{"PIENS",	60},
	{"DORMI",	61},
	{"DUERM",	61},
	{"DORMI",	61},
	{"DESCA",	61},
	{"RONCA",	61},
	{"ECHAT",	61},
	{"ECHAR",	61},
	{"BESAR",	62},
	{"BESA",	62},
	{"CHUPA",	63},
	{"LAMER",	63},
	{"LAME",	63},
	{"PROBA",	63},
	{"PRUEB",	63},
	{"PALAD",	63},
	{"SABOR",	63},
	*/
	{"abri",	vAbrir},
	{"abre",	vAbrir},
    {"abrir",   vAbrir},
	{"cerrar",	vCerrar},
	{"cierra",	vCerrar},
//	{"quema",	66},
	{"encen",	vEncender},
	{"encie",	vEncender},
	{"incen",	vEncender},
	{"prend",	vEncender},
	{"apaga",	vApagar},
	{"extin",	vApagar},
	{"sofoc",	vApagar},
//	{"trans",	68},
	{"rompe",	vRomper},
	{"parti",	vRomper},
	{"parte",	vRomper},
	{"quebr",	vRomper},
	{"quieb",	vRomper},
	{"destr",	vRomper},
//	{"versi",	70},
	{"poner",	vPoner},
	{"pon",		vPoner},
	{"ponte",	vPoner},
	{"ponse",	vPoner},
	{"pone",	vPoner},
	{"viste",	vVestir},
	{"vesti",	vVestir},
	{"golpe",	vAtacar},
	{"dar",		vDar},
	{"da",		vDar},
	{"dase",	vDar},
	{"darse",	vDar},
	{"darte",	vDar},
	{"dale",	vDar},
	{"darle",	vDar},
	{"ofrec",	vDar},
//	{"regal",	73},
	{"meter",	vMeter},
	{"mete", 	vMeter},
	{"intro",	vMeter},
	{"inser",	vMeter},
	{"echa",	vMeter},
	{"echar",	vMeter},
/*
	{"LLAMA",	76},
	{"GRITA",	77},
	{"CHILL",	77},
	{"REGIS",	78},
	{"REBUS",	78},
	{"ARRAN",	79},
	{"ESTIR",	79},
	{"USAR",	80},
	{"USA",		80},
	{"UTILI",	80},
	{"MATAT",	81},
	{"MATAR",	81},
	{"SUICI",	81},
	{"XYZZY",	82},
	{"ARRAS",	83},
	{"REGIS",	84},
	{"MIRAT",	85},
	{"MIRAR",	85},
	{"EXAMI",	85},
	{"VACIA",	86},
	{"VERTE",	86},
	{"VERTI",	86},  // TÈrmino errÛneo, pero ampliamente extendido
	{"VIERT",	86},
	{"DESPI",	87},
	{"DESPE",	87},
	{"ESPAB",	87},
	{"LAVAT",	88},
	{"LAVAR",	88},
	{"LAVAR",	88},
	{"LIMPI",	88},
	{"INSUL",	89},
	{"INCRE",	89},
	*/
	{"ir",		vIr},
	{"ve",		vIr},
	{"vete",	vIr},
	{"irte",	vIr},
	{"irse",	vIr},
	{"camin",	vIr},
	{"anda",	vIr},
	{"andar",	vIr},
	{"corre",	vIr},
	{"huir",	vIr},
	{"huye",	vIr},
	{"dirig",	vIr},
	/*
	{"ESCON",	91},
	{"OCULT",	91},
	{"ESCON",	91},
	{"OCULTA",	91},
	{"ESCON",	92},
	{"OCULT",	92},
	{"LLORA",	93},
	{"LLORI",	93},
	{"SOLLO",	93},
	{"RECOR",	94},
	{"ACORD",	94},
	{"ACUER",	94},
	{"SOPLA",	95},
	{"DOBLA",	96},
	{"DESDO",	97},
	{"desat",	98},
	{"UNIR",	99},
	{"UNE",		99},
	{"JUNTA",	99},
	{"ACERC",	99},
	{"ARRIM",	99},
	{"APROX",	99},
	{"REUNE",	99},
	{"REUNI",	99},
	{"SEPAR",	100},
	{"LIMPI",	101},
	{"FROTA",	101},
	{"LAVAR",	101},
	{"LAVA",	101},
	{"PULE",	101},
	{"PULIR",	101},
	{"FREGA",	101},
	{"FRIEG",	101},
	{"RASCA",	102},
	{"RASPA",	102},
	{"CONEC",	103},
	{"ACTIV",	103},
	{"DESCO",	104},
	{"DESAC",	104},
	{"ABRAZ",	105},
	{"COMPRA",	106},	{"ADQUI",	106},
	{"CONSU",	107},
	{"PREGU",	108},
	*/
	{"lee",		vLeer},
	{"leer",	vLeer},
	{"leers",	vLeer},
	{"leert",	vLeer},
	{"leete",	vLeer},
	{"mover",	vEmpujar},
	{"mueve",	vEmpujar},
	{"despl",	vEmpujar},
/*
	{"APRET",	111},
	{"APRIE",	111},
	{"ESTRU",	111},
	{"BAILA",	112},
	{"DANZA",	112},
	{"SALUD",	113},
	{"LEVAN",	114},
	{"ESPAN",	115},
	{"SECA",	116},
	{"SECAR",	116},
	{"COLOC",	117},
	{"MACHA",	118},
	{"asust", 120},
	{"moja",121},
	{"mojar",121},
	{"empap",121},
	{"impre",121},
*/
	{"tecle", vTeclear},
	{"escri", vEscribir},
    {"",0}
};

// Tabla de adjetivos
token_t adjetivos_t [] =
{
	{"peque", aPequeno},
	{"grand", aGrande},
	{"viejo", aViejo},
	{"vieja", aVieja},
	{"nuevo", aNuevo},
	{"nueva", aNueva},
	{"duro", aDuro},
	{"dura", aDura},
	{"bland", aBlando},
	{"corto", aCorto},
	{"corta", aCorta},
	{"largo", aLargo},
	{"larga", aLarga},
	{"azul", aAzul},
	{"verde", aVerde},
	{"negro", aNegro},
	{"rojo", aRojo},
	{"verde", aVerde},
	{"amari", aAmarillo},
	{"termi", aTermico},
	{"frio", aFrio},
	{"calie", aCaliente},
	{"",0}
};


// Tabla de objetos
// No existe la limitaciÛn de PAWS donde el objeto 1 siemmpre es la fuente de luz 
// La luz en ngpaws se calcula en funciÛn del atributo de los objetos presentes en la localidad, puestos y llevados.
// Localidades de sistema: LOCATION_WORN,LOCATION_CARRIED, LOCATION_NONCREATED, LOCATION_HERE, CARRIED, HERE, NONCREATED, WORN

// Atributos con OR: aLight, aWear, aContainer, aNPC, aConcealed, aEdible, aDrinkable, aEnterable, aFemale, aLockable, aLocked, aMale, aNeuter, aOpenable, aOpen, aPluralName, aTransparent, aScenary, aSupporter, aSwitchable, aOn, aStatic, aExamined, aTaken, aDropped, aVisited, aTalked, aWore, aEaten, aPropio, aDeterminado

obj_t objetos_t[]=
{
    // ID, LOC, NOMBRE, NOMBREID, ADJID, PESO, ATRIBUTOS
    {oCaja, lZonaA2,"∆q≥tüazul",     nPaquete, aAzul,   1,0x0000 | aMale | aDeterminado},  
    {oTraje, lEsclusa,"t´jüpr•u◊zaπ",     nTraje, EMPTY_WORD,   1,0x0000 | aWear| aMale | aDeterminado},  
	{oEsclusa, lEsclusa,"∏mÛ®tÖÄ•clu—", nEsclusa, EMPTY_WORD,   1,0x0000 | aStatic | aFemale | aDeterminado},  
	{oPuerta, lEntrada,"Û®tÖøetΩ",     nPuerta, EMPTY_WORD,   1,0x0000 | aStatic | aFemale},  
	{obotonrojo, lEsclusa,"bot&ß≈jo",     nBoton, aRojo,   1,0x0000 | aStatic | aConcealed | aMale},  
	{obotonverde, lEsclusa,"bot&ßv®§",     nBoton, aVerde,   1,0x0000 | aStatic | aConcealed | aMale},  
	{oCanon, NONCREATED,"·+&ßívigi™nÕa",     nCanon, EMPTY_WORD,   1,0x0000 | aStatic | aMale},  
	{oTeclado, NONCREATED,"teclado",     nTeclado, EMPTY_WORD,   1,0x0000 | aStatic | aMale},  
    {0,0,"",                EMPTY_WORD,EMPTY_WORD,            0,0x0000}
}; // Tabla de objetos de la aventura

// Una tabla para hablar con el ordenador, se puede usar la misma tÈcnica para definir listas de atrezzo y ahorrarse cientos de 'examinar objeto'.

// Tabla de conversaciÛn con el ordenador 
tema_t ordenador_t[]= 
{
	{"Hola","-Ho™,æoyÅ±d£¿± íµœÕ&ß-r•p∫íuµ vozøet#li·."},
	{"Adios","-Hº√≠≈¥o."},
	{"trabajo","-SoyÅ€s©mÖ µœÕ&ß§Äµœ«"},
	{"yo/piloto/conductor/transportista","-EröTod C∫n±,ÅpiÿtåÄµœ«"},
	{"tormenta/parabrisas", "-La»±mõçøo§´”«Nåb®%aæ®êp≈b÷Ãéa≤cÁ§r≤¨ΩÃc$ßus…πÅt´jüíp≈©cÕ‰."},
	{"Europa/luna",	"-E¬am¡óÅ—t$litüJovi…o«-r•p∫§Å±d£¿±."},
	{"Joviano/Jupiter",	"-Eu≈pçê—t$litüíJupit®«EnÄcèilu⁄µ”≠± J'pit®Å•p‡t#cuÿîæob®b‚«P± §sg´Õa u•ƒoóc∞goîóÄcèocul√«"},
	{"cara/lado", "-Eu≈∆»i£üuµÆès–mprü±iõ¿a haÕa J'pit®."},
	{"donde", "-E¬#ÇußΩÃc$n,óÅext®i±«T£dr#¢àsΩirÉãa»±mõa«"},
	{"Mision","-T£Òûàª∏g®ê∆q≥©ÇEu≈∆ Óäeg∞ÿÇM∞tü…©Ñ 24h -r•p∫§."},
	{"nombre",	"-Mi ombªî TOD«SiØ°pªfi®•,≠≥döus∞ãü›mbrüa¨hÌ™rÉ⁄go« "},
	{"modelo/ordenador", "-SoyêÎ§l°Cyb®d“ü1997« Mi≠≈g´m¿± ±igiµ¨f≥ÅDr«Guill®m°Haß§ÄMe C±È´ti∫«Meóﬂ+&≤Æa¥∞‘µÆ…Õ‰Ê/Œi®öo%r™?"},
	{"mega/megacorp/corporacion/ciberdine/cyberdine","-Lùmpr•aﬁ•p∫—blüíàt' ÓyoãÒ¡Év®s…πÇEu≈∆."},
	{"aventuras/conversacionales","-Meó·¥…ì¢avõu´sÉv®—Õoµl•."},
	{"if/fi/ficcion/interactiva","-D•∏›z∏îüt$rm“oÊ/tüªfi®öaìsÉv®—Õoµl•?"},
	{"graficas","-Noã#ßmΩ,≠®°n°cª°àp≥dôjug∞≤‘µøiäºÉduc•."},
	{"transilvania","-Noã#øΩ,≠®oîêÈ∏òr√éaøi gu¬o«Pªfi®°'ï›chüm#sìr'Êàdu´ Àô12h íj≥gå»–mp°ªΩ."},
	{"isla",	"-P®°bu£oÊ<€îa À·Ät®m“∞∫!«R‡u®d°àÀ°áûaut±•,ê√¨UTOØühiz°uµ vi€√≤¨p≈g´m¿± àt®m“& √ßÃ¨à§¬ruy®oß’πêbÿàíofiÕµs«P®oîçŸt´ hi¬±ia."},
	{"uto",	"-ReΩmõün°t£g°m#¢”tûsobªãa≠®soµ«S“¶udù´‘µøõüÃ•t´éç·p∞≤øi¢ªgi¬r¡."},
	{"kmbr","-Uß⁄¬®‚,æürum±ea à®aê∞£à≈j°mu√n©«"},
	{"kno",	"-Ußc∂eb´d°aut± íc&⁄c àvivi&ø#Ñ¶¡Õõûa+¡«T£%aêcΩÿóÅ§d°√ß§s∏muµ¨àfiµlmõümu◊&≤p™¬¿°p± $l«Esêcl#€∏Ê§b®%ô÷®»o”æuŸb´ v∞iôœc•."},
	{"dela/dla","-Unîc◊bÖ¨€gl°XVÊg´Õôa $¨t£ÒûdËp∫iblöÃ´vil™sòm°'Cu…πòm%âs°Ïg≈'Çf´nc$s."},
	{"frances/ingles/italiano/aleman",	"-L£guômu®tºÊhoyÇd%a»oπÅÀiv®s°hÌï©c›l™›."},
	{"tecnollano/castellano/espanol/mexicano", "-LaØ£gua f´ncÖ u•ƒûd%º."},
	{"comic", "-AÚüﬂcu£Õa¨muy≠oÛ™r≤ fiµ÷Ñ¨€gl°XX«"},
	{"daniel/danixi", "-E¨r•p∫—blü§ÄÂòrÈ´ti∫."},
	{"obra", "-HÌ÷ÎÑúl°cu…d°t®m“ötuøi€‰."},
	{"avõu´ fav±i√", "-E¢dif%Õlúegir,æüvolvi®oßªΩmõüÈÛ™röa ´%z §Äp≈lif®aÕ&ßí€s©ÃÑ µœÕ‰Çau’m&vil•Êb∞cûÓµv•î∆ÕΩ•«"},
	{"jug∞≤võu´", "-Tübusc∞$‘µ ªΩmõüi¥®•a¥üuµ œz»®m“•Ä⁄€‰."},
	{"cancion/oir/canta/tararea", "-DaËy..«-Co⁄£za≤ót∫∞æiß§mºi¿a f±tuµ."},
	{"guillermo", "-E¨“g£i®°r•p∫—blü§Äi¥®faz hum…ÖØû€s©ÃÑ µœÕ&ß§ÄMeòrÈ´ti∫"},
	{"interfa",	"-L°àusºéa hÌ™rÉ⁄go."},
	{"viajar", "-P◊m®°haÓàª∏g®Å∆q≥©,Ø≥g°p∫dr$ﬁumb°a M∞©«-tüªcu®”Å±d£¿±."},
	{"entrada", "-La ä¿aã# haÓfu®a«E¢p¡iblüàn‡•itöΩg'ßc&digå≤cc•oéa ä∞."},
	{"codigo", "-N°t£g°n“g'n¶a’óÄ±d£ §Äcäa¨‹®cÖ¨c&digo."},
	{"central", "-LaÆäa¨íZEURã#óÄTi®´."},
	{"ZEUR", "-EsÄÒpr•Ö ªp∞tå≠aq≥t•Ç24h ànû∆Ås≥ld°yì¢p–zºéaæegui∑ªc±◊£πÅUniv®so."},
	{"Tierra", "-SΩvoÇlôz∫ôp≈©gidôsühaÉv®tiπÇÀÉgÿm®¿åøe-urb•«Uß€ti°p∂igr¡o,≠®°ll£åŸp±tÀi”§s." },
	{"almacen", "-HÒûat®◊z¿°c®cÖÄä¿a«DebösΩir≤l†xt®i±Êä∞óÅΩÃc$ßÓvolv®ÉÅ∆q≥©éa àp≥dôt®m“∞Ä⁄€‰«"},
	{"temperatura", "-Eßt±n°a 150∫C baj°c®oóÅext®i±«Tüª∏⁄£d°àl÷v•Åt´jüísup®vivi£Õa."},
	{"consola", "-LaÉsolÖø…d°mu•t´Å•t¿åÄµvüyØ¡Éƒolöm…uΩ•«ActuΩmõeã# §—ctiv¿aéa≤h±´ró®g%a«"},
	{"‹tiv∞Éso™", "-E¢Âj±îp®∞≤òmp÷t∞Ä⁄€‰«E¬am¡ÇÎdå bajoÉsuÎ."},
	{"§—ctiv∞Éso™", "-Yaã# §—ctiv¿a«"},
	{"memoria", "-E¢n±Ã¨àn°ªcu®dömuch°Ωò⁄£zå‘µøi€‰«P®°n°tüpªocupeÑî°aho´Ê§sÛ$Ñ Àôj±µ”Ñ ª™x»od°volv®#≤Än±mΩid¿."},
	{ "relax/jornadas/vacaciones","-D•Û$Ñãüt´baj°Èdr#¢pº∞ Àûd%aÑ ª™xÇM∞©."},
	{"marte","-YaæÌ•,Åp™Ï√ ≈jo«Bu£o,≤µ´nj¿åsíàd‚ò⁄£zoÄt®´f±ÃÕ‰."},
	{"venus/saturno/pluton/lunas/urano/neptuno/mercurio","-E¢Âj± àn°sΩirsüdñ©mÖÄ⁄€‰«-r•p∫§"},
	{"terraformacion","-H‹üÀûa+¡òm£z∞∫Äext´cÕ&ßím“®Ω•,≤b◊®oßv∞iôm“ôyòm£z∞oßlût´bajoÑ»®´f±ÃÕ‰."},
	{"minas","-D•Û$ÑÄª∏gidÖbÒûäeg∞Å∆q≥©ÇE¨T£ed±«UnÖì¢Ãy±ö⁄µÑ Hi®r°ÓN%ŒñdñSË©Ã So™r."},
	{"Tenedor","-Tambi$ßsü÷ÉoÁòÎÅT£ed±¶ñdiÌÿ«E¢uµøiµ gob®µ”≠±Ås“di·t°ÀifÍ¿åø“®%Ö M∞©«"},
	{"Hierro/Niquel","-EsêÂ√¨ÌÀ”¥üp®°muy≠ªÕaπ«L°dif%Õlîæu»´nsp±©,≠u•îøuy¶£s°yÆu•√ bº√¥üd“®o†xt´®låÄatm&sf®aóÄTi®´«"},
	{"sindicato","-Gobi®µnÉø…°du´ØûpªÕoÑ võa yØû‹u®πÑæum“i¬r¡«"},
	{"humanidad","-Sühùxt£did°p±Ä™xia«P®°lüt£$i¢bº√¥üapeg°a¨€s©Ã So™rÊàsüÃ¥i£eòÎÅcäå»odºì¢op®aÕ∫•."},
	{"operaciones","-YaæÌösum“i¬r¡,≠aq≥t®%a,ŸÕo..."},
	{"ocio", "-AŒ% µdÖŸÕoÊhaÓàt®m“∞Åt´bajo."},
	{"paqueteria", "-Nu•ƒ°t´bajoÇZEURî äeg∞Øû∆q≥t•Ç24h"},
	{"suministros", "-SühaßÌi®t°v∞iô⁄µsÇM∞©ÉÅobjetivå≤ba´t∞ÅpªÕå≠∫®≤lgÀôÃt®iôp◊mºóÅ•∆Õo."},
	{"paquete", "-Seg'nÄ§sc◊pÕ‰¶ñm£—jüsüt´tÖê∆q≥tüí27cm x 29cm x 30cm àp•a 10Kg«"},
	{"recoger/recogida", "-HÒûat®◊zaπóÄä¿Ö¨ΩÃc$n«Sugi®°àsΩgôah% fu®a,Ø™möaÄÛ®√ Óª∏jºÅ∆q≥©."},
	{"nave", "-Vo™m¡Çuµ µvüíªp∞tå»ip°T•™«Esòmp÷√mõeú$cƒi·,≤s% à⁄äôt£mûuµãr∂ïc®·≠odªmûªc∞g∞ì¢bat®%º."},
	{"estrellas", "-Laø#¢c®c…ç Sol."},
	{"Sol", "-EsÄ•ƒ∂ïpr“Õ∆¨§ãü€s©Ã«"},
	{"SË©Ã So™r", "-EsÅ€s©Ã≤¨àp®t£‡eÄTi®´«"},
	{"sistemas", "-Todûlû€s©mºÇ±d£«Op®am¡ÇÎdå bajoÉsuÎ."},
	{"ayuda", "-P∞çoãoy≤Œ%,éa≤yud∞©«AlgÀô∆™brôc™vüàp≥döus∞æ∫:øi€‰ÊJ'pit®, ombª,øo§ÿ,ø£—je..."},
	{"mensaje/comanda/encargo/entrega"	"TeÃ: Env%°urgõüa¨T£ed± íM∞©«Co¥£iπ: Re∏gi”ÇΩÃc$nÇ∏±d£¿ºÇEu≈∆«Us∞Æ™œ: 32768«Imp±√n©: Ma¥£®≤ ©mp®atu´ baj°c®o«"},
	{"clave", "-Quiz# haya≤lgoóÅm£—jüdñ£c∞go."},
	{"radiacion", "-Noîêp≈b÷ÃÉÅt´jüísup®viv£Õa«S“úÄ´diaÕ‰î √núev¿a àn°vivir%ôm#Ñêd%a«"},
	{"airlock/esclusa/boton/botones", "-Lçclu—æüop®aø…uΩmõe«E¨bot&ßv®íÕ®´Ä•clu— yÅ≈joÄÌª« Aﬂg'´tüá÷v∞Åt´jüísup®viv£Õa≠u•’«"},
	{"comunicaciones", "-Debid°aÄfu®tü´diaÕ&ßnu•t´sòmÀi·Õ∫ös&l°fÀÕoµnóÄµœ«Noã∞$Étig°ah% fu®a«"},
	{"eva", "-S∫ì¢€g™Ñ≤ctivid¿†xt´-œhÍu™r«E¢cu…d°sΩ•Ç⁄€&ßfu®ÖÄµœ«"},
	{"traje/superviviencia/proteccion"	"-Loó∏¥´r#sóÄ•clu—Øi¬oéaæu‘so«R‡u®” °sΩi∑§Äµvü€ßl÷v∞l°Û•’."},
	{"mierda/tacos/culo/joder/hija/puta/puton/hijo/comemierda", "-E—≤ÁpÕ&ßn°f±Ãétüí⁄ bºüí”t¡«-r•p∫§Å±d£¿±Éúeg…Õa«"},
	{"siglas", "-YaæÌ•,éa≤c±t∞≠a™b´Ñmºiaπìrgº«"},
	{"calla", "-Sißp≈b÷mºÊya °√´ª°mº«-r•p∫§êÈc°πliπ."},
	{"bodega", "-D∫íΩÃc£amûlû∆q≥t•éaæu¶i¬◊buÕ‰."},
	{"temperatura/frigo/congelador/frigorifico/enfriar", "-T£Ò¡êf◊g±%fÍådÍ¿°aãütipå≠aq≥t•«-r•p∫í§sÛ$Ñêbªvü€l£Õo"},
	{0,0}
};

// ----------------------------------------------------------------
// Tabla de respuestas
// ----------------------------------------------------------------
char respuestas()
{
 BYTE aux;
 //setRAMPage(0);
 //if (respuestas_pagina0()==FALSE)
  //  {
   // setRAMPage(1);
   // if (respuestas_pagina1()==TRUE) return TRUE;
   // }
   // else return TRUE;

// AÒadir funciones de inyecciÛn de comandos en modo DEBUG

//; SÛlo podemos hablar con el ordenador en la nave
//; ORDENADOR, palabra_clave

// ordenador encender consola -> encender ordenador consola -> encender consola
if (fnombre1==nOrdenador) {
	// Llamar al procesado de la tabla por tema...
	// ordenador encender consola -> encender ordenador consola -> encender consola
	// ordenador palabra_clave
	// Fuera del alcance...
	if (CNDatgt (lBodega)) { ACCmessage (177); DONE; }
	// Comandos al ordenador
	if (fverbo==vAbrir)
	{
		if (fnombre2==nEsclusa)
		{
			ACCmessage (132); DONE;
		}
	}

	if (fverbo==vApagar) { ACCmessage (192); DONE; }
	if (fverbo==vEncender && fnombre2==nConsola) { ACCmessage (105); DONE; }
	if (fverbo==vCerrar)
	{

	}
	// Preguntas al ordenador
	//if (aux=buscador_tema(ordenador_t, nombres_t[fnombre2]))
	//{
	//	writeText (ordenador_t[aux].respuesta);
	//	DONE;
	//}	
	ACCmessage (50);
	DONE;
	}

//-------------------------------------------------------------
// Cosas que se pueden hacer con los objetos...

if (fverbo== vExaminar) 
	{
		if (fnombre1== nContenedor  && CNDpresent (oCaja)) 
		{
			ACCmessage (46);
			DONE;
		}
		if (fnombre1==nIndicador && CNDpresent(oCaja)) 
		{
			ACCmessage (49);
			DONE;
		}
		if (fnombre1==nTraje && CNDpresent(oTraje)) { ACCmessage (16); DONE; }
	}

if (fverbo==vPoner && fnombre1==nTraje && CNDpresent(oTraje))
	{
		if (CNDnotcarr(oTraje) && CNDnotworn(oTraje))
		{
			ACCmessage (192);
			ACCget (oTraje);
		}
	}

// Quitar el traje...
if (fverbo==vQuitar && fnombre1==nTraje && CNDworn(oTraje))
{
	if (CNDatgt(lBodega)) { ACCmessage(19); DONE; }
}

if (fverbo==vAbrir && fnombre1== nContenedor) 
	{
		ACCmessage(48);
		DONE;
	}

// ---------------------------------------------------------------
// Descripciones com˙nes para la nave
if (fverbo==vExaminar)  {
	if (fnombre1==nNave)	
	{
		if (CNDatlt (lExterior)) { ACCmessage (14); return TRUE; }
		if (CNDatlt (lAlmacen)) { ACCmessage(36); return TRUE;}
		// Si estamos dentro del almacÈn no vemos la nave...
	}

	if (fnombre1==nPared || fnombre1==nSuelo) 
	{
		if (CNDatlt(lExterior)) { ACCmessage (33); DONE; }
			else { ACCmessage (179); DONE; }
	}

	if (fnombre1==nTecho || fnombre1==nCielo) {
		if (CNDatlt(lExterior)) { ACCmessage (33); DONE;}
			else { ACCmessage(178); DONE; }
	}

}

if (fverbo==vSaltar) { ACCmessage(56); DONE; }
if (fverbo==vEscuchar) 
{
	if (CNDatlt (lExterior)) { ACCmessage (57); DONE; }
	ACCmessage(56);
	DONE;
}

if (fverbo==vCantar) 
{
	if (CNDatlt(lExterior)) { ACCmessage (175); DONE;}
		else { ACCmessage (176); DONE; }
}

// ---------------------------------------------------------------
// Cosas que hacer en las localidades...
// --------------------------------------------------
// Puente de mando
// --------------------------------------------------

if (flocalidad==lPuente)
	{
		if (fverbo==vTeclear) { ACCmessage (181); DONE; }
		// Atrezzo 
		if (fverbo==vExaminar) 
		{
			if (fnombre1==nSistema && fadjetivo1==aTermico ) 
			{
				ACCmessage(15); DONE;
			}

			if (fnombre1==nParabrisas)
			{
				ACCmessage (12); DONE;
			}

			if (fnombre1==nCristales) { ACCmessage (13); DONE; }
			if (fnombre1==nEscaleras) { ACCmessage (4); DONE; }
			if (fnombre1==nPantalla || fnombre1==nInterior || fnombre1==nConsola || fnombre1==nControles) 
			{
				ACCmessage (8); DONE;
			}	
			if (fnombre1==nLuz) { ACCmessage (10); DONE; }		
			if (fnombre1==nTormenta) { ACCmessage (11); DONE; }
		}

		if (fverbo==vEncender && (fnombre1==nPantalla || fnombre1==nConsola)) { ACCmessage (9); DONE; }
		if (fverbo==vIr && fnombre1==nNodo) { ACCgoto(lNodo); DONE;	}
	}
// --------------------------------------------------
// Nodo central 
// --------------------------------------------------

if (flocalidad == lNodo) 	
	{
		if (fverbo==vExaminar) 
		{
			if (fnombre1==nEscaleras) 
			{
				ACCmessage(5);
				DONE;
			}
		}
		if (fverbo==vIr) 
		{			
			if (fnombre1==nPuente) 
				{
				ACCgoto (lPuente);
				DONE;
				}
			if (fnombre1==nEsclusa)
			{
				ACCgoto (lEsclusa);
				DONE;				
			}
			if (fnombre1==nBodega)
			{
				ACCgoto(lBodega);
				DONE;
			}
		}

	// Escena de casi-final...
	if (CNDcarried(oCaja) && flags[fCasifin]==0)
		{
			ACCmessage (58);
			flags[fCasifin]=1;
			ACCanykey();
			ACCmessage (59);
			DONE;
		}

	}

// --------------------------------------------------
// Esclusa 
// --------------------------------------------------
if (flocalidad == lEsclusa) 
	{
	// SinÛnimos...
	if (fverbo==vIr && fnombre1==nExterior) { fverbo = vSalir; }
	if (fverbo==nOeste) { fverbo = vSalir; }
	if (fverbo==nEste) { fverbo = vIr; fnombre1=nNodo; }
	// Puzzle de la esclusa y ponerse el traje
	// No podemos quitarnos el traje con la esclusa abierta...
	if (fverbo==vQuitar && fnombre1==nTraje  && CNDcarried(oTraje))
		{
			if (CNDonotzero(oEsclusa, aOpen)) { ACCmessage (19); DONE; }
		}

	if (fverbo==vSalir)
		{
		// Salir, compuerta cerrada...
		if (CNDozero (oEsclusa, aOpen)) { ACCmes(24); ACCmessage(22); DONE; }
		// Salir, Pero no lleva el traje
		if (CNDnotworn (oTraje)) { ACCmessage (19); DONE;}
		// Salir con Èxito 
		if (CNDonotzero(oEsclusa, aOpen) && CNDworn(oTraje)) { ACCgoto (lExterior); DONE; }
		}
	
	// Regresa al nodo pero lleva puesto el traje...
	if (fverbo==vIr && fnombre1==nNodo)
		{
			if (CNDworn(oTraje) || CNDcarried(oTraje)) { ACCmessage (20); DONE; }
				else { ACCgoto (lNodo); DONE; }
		}

	// Puzzle de abrir la compuerta
	if (fnombre1==nPuerta || fnombre1==nCompuerta) fnombre1=nEsclusa;
	if (fverbo==vAbrir && fnombre1==nEsclusa ) { ACCmessage(24); DONE; }
	if (fverbo==vCerrar && fnombre1==nEsclusa) { ACCmessage(25); DONE; }
	if (fverbo==vExaminar)
		{			
			if (fnombre1==nEsclusa || fnombre1==nCompu)
			{
				ACCmes(21);
				// Aparecen listados...
				ACCoclear (obotonrojo,aConcealed);
				ACCoclear (obotonverde,aConcealed);
				if (CNDonotzero(oEsclusa, aOpen)) { ACCmessage(23); DONE; }
					else { ACCmessage(22); DONE; }
			}
			if (fnombre1==nControles) { ACCmessage(24); DONE; }
			if (fnombre1==nBoton) 
			{
				if (fadjetivo1==aVerde) { ACCmessage (26); DONE; }
				if (fadjetivo1==aRojo) { ACCmessage(27); DONE; }	
				ACCmessage(172); 
				DONE; 
			} 
		}
	// Usar los botones...

	if (fverbo==vPulsar)
	{
		if (fnombre1==nBoton)
		{
			// Cerrar esclusa 
			if (fadjetivo1==aRojo)
			{
				if (CNDozero(oEsclusa,aOpen)) { ACCmessage(32); DONE; }
				else { ACCoclear (oEsclusa, aOpen); ACCmessage(30); DONE; }
			}
			// Abrir esclusa...
			if (fadjetivo1==aVerde)
			{
				if (CNDonotzero(oEsclusa,aOpen)) { ACCmessage(28); DONE; }
				else { 
					// Pero no tiene puesto el traje...
					if (CNDnotworn(oTraje)) { ACCmessage(19); DONE; }
					// Abre la compuerta
					ACCoset (oEsclusa, aOpen); ACCmessage(29); DONE; }
			}
		}	
	}
		
	}

// --------------------------------------------------
// Bodega 
// --------------------------------------------------

if (flocalidad==lBodega)
	{
	// Fin del juego
	if (CNDcarried(oCaja))
		{
			ACCmessage (60);
			ACCanykey();
			ACCmessage (61);
			ACCanykey();
			ACCmessage (62);
			ACCanykey();
			ACCmessage (63);
			ACCend();
			DONE;
		}
	if (fverbo==vExaminar)
		{
		if (fnombre1==nPaquetes) { ACCmessage (173); DONE; }
		}

	if ( (fverbo==vCoger || fverbo==vEmpujar) && fnombre1==nPaquetes)
		{
			ACCmessage (174);
			DONE;
		}
	}
// --------------------------------------------------
// Exterior 
// --------------------------------------------------
if (fverbo==vExaminar)
{
	if (flocalidad==lExterior || flocalidad==lAlmacen)
	{
		if (fnombre1==nCielo) { ACCmessage (7); DONE; }
		if (fnombre1==nJupiter) { ACCmessage (178); DONE; }
		if (fnombre1==nEuropa) { ACCmessage (179); DONE; }
		if (fnombre1==nCristales) { ACCmessage (11); DONE; }	
	}
}


if (flocalidad==lExterior)
	{
		if (fverbo==vIr)
		{
			if (fnombre1==nNave) 
			{
				ACCgoto (lEsclusa);
			}	
			if (fnombre1==nAlmacen || fnombre1==nMole || fnombre1==nEdificio)
			{
				ACCgoto (lAlmacen);
			}
		}

		if (fverbo==vExaminar)
		{
			if (fnombre1==nNave) 
			{
				ACCmessage (36);
				DONE;	
			}
			if (fnombre1==nMole) 
			{
				ACCmessage (38);
				DONE;
			}
		}
	}

// --------------------------------------------------
// Entrada al almacÈn
// --------------------------------------------------
if (flocalidad==lEntrada)
{		
	if (fverbo==vIr) 
	{
		if (fnombre1==nNave) { ACCgoto (lExterior); DONE; }	
	}
	
	
	if (fverbo==nEste) { fverbo==vIr; fnombre1==nNave; }
	if (fverbo==vIr && fnombre1==nNave) { ACCgoto(lExterior); DONE; }
	if (fverbo==nOeste || fnombre1==nOeste) { fverbo==vEntrar; }
	// Entrar al almacÈn...
	if (fverbo==vEntrar) 
	{
		if (CNDozero(oPuerta, aOpen)) { ACCmessage(22); DONE; }
		ACCgoto(lZonaA1);
		DONE;
	}

	if (fverbo==vExaminar)
	{
		if (fnombre1==nEdificio) { ACCmessage(182); DONE; }	

		if (fnombre1==nPuerta) 
		{
			ACCmes(180);
			if (!CNDisat(oTeclado,lEntrada))
			{
				ACCmes (39);
				ACCplace (oTeclado,lEntrada);			
			}	
			if (CNDonotzero(oPuerta, aOpen)) { ACCmessage(23); DONE;}
				else { ACCmessage(22); DONE; }
			DONE;
		}

		if (fnombre1==nCanon && CNDpresent(oCanon)) { ACCmessage(41); DONE; }
		if (fnombre1==nTeclado && CNDpresent(oTeclado)) 
		{
			if (CNDabsent(oCanon) && CNDozero (oPuerta, aOpen)) 
			{
				ACCplace(oCanon, lEntrada);
				ACCmessage(40);
				DONE;
			}
			writeText ("E¨©c™d°n°r•p∫§«La≠u®√ yaã#≤bi®√.^");
			DONE;
		}
	}

	if ( (fverbo==vAbrir||fverbo==vCerrar) && fnombre1==nPuerta)
	{
		ACCmessage (195);
		if (!CNDisat(oTeclado,lEntrada))
		{
			ACCmes (39);
			ACCplace (oTeclado,lEntrada);			
		}	
		DONE;
	}
		
	if (fverbo==vTeclear) fverbo=vEscribir;
	if (fverbo==vEscribir)
	{
		if (fnombre2==EMPTY_WORD) { fnombre2=nTeclado; ACCmes(183); }
		if (fnombre2==nTeclado)
		{
			// Si ya est· abierta...
			if (CNDpresent(oTeclado) && CNDonotzero(oPuerta, aOpen))
			{
				ACCmessage(184);
				DONE;
			}
			if (fnombre1==n32768 && CNDpresent(oTeclado))
			{
				// No est· abierta...
				if (CNDozero(oPuerta, aOpen))
				{
					ACCmessage(186);
					ACCoset (oPuerta, aOpen);
					ACCplace (oCanon, LOCATION_NOTCREATED);
					ACCsetexit (lEntrada, nOeste, lZonaA1);
					ACCsetexit (lEntrada, nEntrar, lZonaA1);
					ACCdesc();
					DONE;
				}	
			}

			// Clave incorrecta...
			if (CNDpresent(oTeclado) && CNDpresent(oCanon)) 
			{
				ACCmes (185);
				flags[fCanon]++;
				if (flags[fCanon]<3)
				{
					ACCmessage (186+flags[fCanon]);
					DONE;
				} 
				// Ha excedido el n˙mero de intentos
				ACCmessage(41);				
			}
		}
	}
}
// --------------------------------------------------
// Zona A1
// --------------------------------------------------

if (flocalidad==lZonaA1)
{
	if (fverbo==vExaminar) 
	{
		if (fnombre1==nEstanterias) { ACCmessage (43); DONE;}			
		if (fnombre1==nTecho || fnombre1==nSuelo || fnombre1==nParedes || fnombre1==nPasillo) 
		{
			ACCmessage (44); DONE;
		}
		if (fnombre1==nContenedores) 
		{
			ACCmessage (191);
			DONE;
		}
	}
}

// --------------------------------------------------
// Zona A2
// --------------------------------------------------
if (fverbo==vCoger) 
{
	if (fnombre1==nPaquete)
	{
		if (fadjetivo1==aAzul) 
		{
			ACCautog(); DONE; 
		} 
				
		if (flocalidad==lZonaA2 || flocalidad==lZonaA1) { ACCmessage (194);DONE;}
		
	}
}
if (flocalidad==lZonaA2)
{
	 
	if (fverbo==vExaminar)
	{
		if (fnombre1==nBoveda) 
		{
			ACCmessage (45);
			DONE;
		}	
		if (fnombre1==nPasillo) 
		{
			ACCmessage (44);
			DONE;
		}
		if (fnombre1==nEstanterias)
		{
			ACCmessage (44);
			DONE;
		}
		if (fnombre1==nContenedores)
		{
			ACCmessage (191);
			DONE;
		}
	}

}
 NOTDONE;

// ================= LIBRERÌA BASE FINAL=======================================

}

// ----------------------------------------------------------
// Tabla de respuestas-post
// Se llama despuÈs de ejecutar el proceso de respuestas
// ----------------------------------------------------------

char respuestas_post()
{
 //setRAMPage(0);
 // respuestas_post_pagina0();

// ------------------- LIBRERÕA BASE -----------------------------------
 // Comandos de direcciÛn...
 // writeText ("Respuestas Post: %u %u^", flags[fverb], flags[fnoun1]);
 // Movimiento entre localidades...
    BYTE i;
    BYTE loc_temp;

	if (fverbo==vQuitar) {  ACCautor(); DONE; }
	if (fverbo==vPoner) { ACCautow(); DONE; }
	
	// En este punto el examinar no ha sido cubierto por las respuestas
    if (flags[fverb]==vExaminar)
    {
        if (findMatchingObject(get_loc_pos(loc_here()))!=EMPTY_OBJECT)
            writeText ("Deb®%ºòg®î°a¥•.^");
        else
			writeText ("N°v•î°p±≤Œ%.^");
		DONE;
    }

    if(flags[fverb]==nInventario)
    {
        ACCinven();
        ACCnewline();
        DONE;
    }

    if (flags[fverb]==vCoger)  { ACCautog(); DONE; }

    if (flags[fverb]==vDejar) { ACCautod(); DONE; }

    if (flags[fverb]==vMeter) { DONE; }

    if (flags[fverb]==vSacar) { DONE; }

    // Si es un nombre/verbo de conexiÛn...
    if (flags[fverb]>0 && flags[fverb]<NUM_CONNECTION_VERBS)
        {
            i=0;
            loc_temp = get_loc_pos (flags[flocation]); // La posicion en el array no tiene porque coincidir con su id
			i = conexiones_t[loc_temp].con[flags[fverb]-1];
	        if (i>0)
            {
                ACCgoto(i);
                DONE;
            }
            else {
                ACCsysmess(SYSMESS_WRONGDIRECTION);
                NOTDONE;
            }

        }

    // Comandos tÌpicos...
    if (flags[fverb]==vMirar)
    {
        ACCgoto( flags[flocation]);
        DONE;
    }
	if (flags[fverb]==vEmpujar || flags[fverb]==vTirar)
	{
		ACCsysmess (SYSMESS_CANNOTMOVE);
		DONE;
	}

    // Si ninguna acciÛn es v·lida...
    ACCsysmess(SYSMESS_IDONTUNDERSTAND);
    newLine();
}

char proceso1() // Antes de la descripciÛn de la localidad...
{
 // Muestra la pantalla...
 //ACCpicture(flags[flocation]);
 //setRAMPage(0);
 //proceso1_pagina0();
 //setRAMPage(1);
 //proceso1_pagina1();
 //setRAMPage(0);

// C·lculo de luz
// En ZHL todas las localidades tienen luz
flags[flight]=1; // No est· oscuro

// Incrementa el contador de turnos
if (flags[fturns_low]==255) {
	flags[fturns_high]++;
	flags[fturns_low]=0;	
	} else flags[fturns_low]++;
}

char proceso1_post() // DespuÈs de la descripciÛn
{
 //setRAMPage(0);
 // Usar proceso en otras p·ginas require compilar cÛdigo por separado
 //proceso1_post_pagina0();
}

char proceso2() // DespuÈs de cada turno, haya tenido o no Èxito la entrada en la tabla de respuestas
{
 //setRAMPage(0);
 //proceso2_pagina0();
 //setRAMPage(1);
 //proceso2_pagina1();
 //setRAMPage(0);
}


void main (void)
{
	clear_screen(INK_YELLOW | PAPER_BLACK);
// AÒadir men˙ de juego

// Inicializar variables
    initParser ();                // Inicializa el parser y la pantalla
    defineTextWindow (0,0,32,23); // Pantalla reducida en 128Kb, Gr·ficos + Texto
    ACCgoto(lPuente); // Localidad inicial, en el puente de mando
    flags[LOCATION_MAX] = 8; // N˙mero m·s alto de localidad
    ACCability(10,20); // 10 objetos, 20 piedras

	ParserLoop (); // Pone en marcha el bucle principal
}

// Funciones propias del juego

// FunciÛn para buscar en tablas a partir de una palabra clave
unsigned char buscador_tema (tema_t *tabla, unsigned char *word) 
{
    // Input: Cadena de texto
    unsigned char fin=0;
    unsigned char counter=0;
    //writeText ("Buscando...%s\n",word);
    while (fin==0)
    {
		//writeText ("%s-%s ",tabla[counter].word,playerWord);
        if (tabla[counter].topic==0) fin=1; // Fin de la tabla...
        if (strncmp(word,tabla[counter].topic,MAX_WORD_LENGHT)==0)
        {
            // flags[ftemp]=tabla[counter].id;
            //writeText ("found %u", flags[ftemp]);
            return counter;
        }
        counter++;
    }
    return EMPTY_WORD;
}



